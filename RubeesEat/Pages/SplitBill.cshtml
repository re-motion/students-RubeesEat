@page
@using System.Globalization
@using RubeesEat.Model.EqualityComparer
@inject IPersonRepository PersonRepository
@inject IBillRepository BillRepository
@{
var recentPersons = BillRepository.GetRecentBillParticipants(PersonRepository.GetOrCreateUser(HttpContext.User), 10);
}

<h1 class="text-center">Rechnung aufteilen:</h1>
<form id="splitBillForm" method="post" action="/api/bills" class="mx-auto">

    @{
    var today = DateTime.Today.ToString("yyyy-MM-dd");
    }
    <div class="row">
        <div class="col-12">
            <label for="billDate">Datum:</label>
            <input id="billDate" t-id="billDate" type="date" name="billDate" value="@today" required="required"></input><br>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <label for="billDescription">Beschreibung:</label>
            <input class="form-control" id="billDescription" t-id="billDescription" type="text" name="billDescription" required="required"></input>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <label for="billAmount">Gesamtbetrag:</label>
            <input class="form-control" id="billAmount" t-id="billAmount" type="number" step="1.0" name="billAmount" required="required"></input>
        </div>
    </div>


    <div id="recentPeople" t-id="recentPeople">
        @foreach (Person person in recentPersons)
        {
            <button type="button" class="btn btn-sm" id="btn-@person.Id" t-id="addPersonButton"
                onclick="AddPersonByButton('@person.Id', '@person.FirstName @person.LastName')"
                data-id="@person.Id">
            @person.FirstName @person.LastName
        </button>
        }
    </div>

    <div class="row" id="addPerson">
        <div class="col-12">
            <label for="billPeople">Person hinzufügen:</label>
            <div class="d-flex">
                <select class="form-select me-2" name="billPeople" id="billPeople" t-id="billPeople">
            @foreach (Person person in PersonRepository.GetAll().Except(recentPersons, new PersonPropertyEqualityComparer()))
                    {
            <option value="@person.FirstName @person.LastName" data-id="@person.Id">
                @person.FirstName @person.LastName
            </option>
                    }
                </select>
        <input t-action="addPerson" t-click-behavior="Click" type="button" onclick="AddPersonByDropdown()" class="btn btn-secondary" value="Person hinzufügen"></input><br/>
            </div>
        </div>
    </div>

    <br/>

    <div class="row">
        <div class="col-12">
            <button t-action="splitBill" t-click-behavior="Click" type="button" onclick="validate('splitBillForm')" class="btn btn-primary">Rechnung aufteilen</button>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <text id="placeForErrorMessage" t-id="placeForErrorMessage" style="color: red;"></text>
        </div>
    </div>
</form>

<script type="text/javascript" src="js/editableBill.js"></script>