@page "{guid}"
@using System.Globalization
@inject IPersonRepository PersonRepository
@inject IBillRepository billRepository

@{
    var billId = Guid.Parse(RouteData.Values["guid"].ToString());
    var currentBill = billRepository.GetById(billId);
    if (currentBill is null)
    {
        <div id="errorText" style="color:red">Rechnung wurde nicht gefunden!</div>
    }
    else if (PersonRepository.GetOrCreateUser(HttpContext).Id != currentBill.EntryLines[0].Person.Id)
    {
        <div id="errorText" style="color:red">Rechnungen können nur vom Ersteller bearbeitet werden!</div>
    }
    else
    {
<div>
    <h2 class="text-center">Rechnung bearbeiten:</h2>
    <form id="editBillForm" method="post" action="/api/bills/@billId" class="mx-auto">
        <div class="row">
            <div class="col-12">
                <label for="billDate">Datum:</label>
                <input class="form-control" id="billDate" t-id="billDate" type="date" name="billDate" value="@currentBill.Date.ToString("yyyy-MM-dd")" required="required"/><br>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <label for="billDescription">Beschreibung:</label>
                <input class="form-control" id="billDescription" t-id="billDescription" type="text" name="billDescription" value="@currentBill.Description" required /><br/>
            </div>
        </div>

        <input type="hidden" id="billId" name="billId" value="@billId"/>

        <div id="addedPeople" t-id="addedPeople"></div>

        <div class="row" id="addPerson">
            <div class="col-12">
                <label for="billPeople">Person hinzufügen:</label>
                <div class="d-flex">
                    <select class="form-select me-2" name="billPeople" id="billPeople" t-id="billPeople">
                        @foreach (Person person in PersonRepository.GetAllActive().Except(currentBill.EntryLines.Select(entryLine => entryLine.Person).ToList()))
                        {
                        <option value="@person.FirstName @person.LastName" data-id="@person.Id">@person.FirstName @person.LastName </option>
                        }
                    </select>
                    <input t-action="addPerson" t-click-behavior="Click" type="button" onclick="AddPerson()" class="btn btn-secondary" value="Person hinzufügen"/>
                </div><br/>
            </div>
        </div>

        <div class="row">
            <div class="col-2">
                <label for="billAmount">Gesamtbetrag:</label>
                @{
                    string totalAmountWithDot = currentBill.EntryLines[0].Amount.ToString(CultureInfo.InvariantCulture);
                }
                <input class="form-control" id="billAmount" t-id="billAmount" name="billAmount" readonly value="@totalAmountWithDot"/><br/>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <button t-action="updateBill" t-click-behavior="Click" type="button" onclick="validate('editBillForm')" class="btn btn-primary">Rechnung aktualisieren</button><br>
                <text id="placeForErrorMessage" t-id="placeForErrorMessage" style="color: red;"></text>
            </div>
        </div>
    </form>
    <script>
        const existingEntryLines = @Html.Raw(Json.Serialize(currentBill.EntryLines));
    </script>
    <script type="text/javascript" src="../js/editableBill.js"></script>
</div>

    }
}